// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ntl.AuthSS.OrderManagement.Data;

namespace Ntl.AuthSS.OrderManagement.Data.Migrations
{
    [DbContext(typeof(OrderManagementDbContext))]
    [Migration("20210126122354_POStatus")]
    partial class POStatus
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.Carton", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<Guid>("PalletId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ReelCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PalletId");

                    b.HasIndex("ProductId");

                    b.ToTable("Carton");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.Container", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Container");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.InternalStockRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ApprovingFacilityId")
                        .HasColumnType("int");

                    b.Property<int>("CartonCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<int?>("DeliveryOtp")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryRemarks")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ExpectedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FulfillmentComments")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<int>("NoOfStamps")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ReelCount")
                        .HasColumnType("int");

                    b.Property<int?>("RequestingFacilityId")
                        .HasColumnType("int");

                    b.Property<int?>("ShipperId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TrackingId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ApprovingFacilityId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RequestingFacilityId");

                    b.HasIndex("ShipperId");

                    b.ToTable("InternalStockRequest");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.InternalStockRequestHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<Guid?>("InternalStockRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("InternalStockRequestId");

                    b.ToTable("InternalStockRequestHistory");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.InternalStockRequestReel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<Guid?>("InternalStockRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InternalStockRequestId");

                    b.HasIndex("ReelId");

                    b.ToTable("InternalStockRequestReel");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<decimal>("CreditsApplied")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DeliveryOtp")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryRemarks")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ExpectedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<decimal>("PayableAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PaymentDueDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ShipperId")
                        .HasColumnType("int");

                    b.Property<decimal>("ShippingCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalCoils")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalStamps")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalStampsPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrackingId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ShipperId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.OrderHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<int>("ActionedBy")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderHistory");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BrandProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<bool>("IsFulfilled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<int>("NoOfCoils")
                        .HasColumnType("int");

                    b.Property<decimal>("NoOfStamps")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ReelSizeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("StampPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("StockKeepingUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsedCartonCount")
                        .HasColumnType("int");

                    b.Property<int>("UsedReelCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandProductId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReelSizeId");

                    b.HasIndex("StockKeepingUnitId");

                    b.HasIndex("SupplierId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.OrderItemReel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BrandProductId")
                        .HasColumnType("int");

                    b.Property<string>("BrandProductName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CartonCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CartonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<Guid?>("InternalStockRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<int?>("NewBrandProductId")
                        .HasColumnType("int");

                    b.Property<string>("NewBrandProductName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("NewSkuId")
                        .HasColumnType("int");

                    b.Property<string>("NewSkuName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid?>("OrderItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid?>("PrintOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ReelConsumptionType")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReturnOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SkuId")
                        .HasColumnType("int");

                    b.Property<string>("SkuName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<string>("WarehouseName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("BrandProductId");

                    b.HasIndex("CartonId");

                    b.HasIndex("InternalStockRequestId");

                    b.HasIndex("NewBrandProductId");

                    b.HasIndex("NewSkuId");

                    b.HasIndex("OrderItemId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PrintOrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReelId");

                    b.HasIndex("ReturnOrderId");

                    b.HasIndex("SkuId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("OrderItemReel");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.OrgWallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BalanceAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReturnOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TransactionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.Property<int>("WalletOrderType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ReturnOrderId");

                    b.ToTable("OrgWallet");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.Pallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CartonCount")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ContainerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContainerId");

                    b.ToTable("Pallet");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentMode")
                        .HasColumnType("int");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.PaymentHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<Guid?>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Success")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PaymentId");

                    b.ToTable("PaymentHistory");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethod");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.PrintOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpectedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<int>("NoOfReels")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PoNum")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("PrintPartnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ReelSizeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TotalStamps")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrintPartnerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReelSizeId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("PrintOrder");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.PrintOrderHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<int>("ActionedBy")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<Guid?>("PrintOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PrintOrderId");

                    b.ToTable("PrintOrderHistory");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.PrintOrderRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<Guid?>("PrintOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrintOrderId");

                    b.ToTable("PrintOrderRequest");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.Reel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<bool>("IsUsedForFulfillment")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<Guid?>("PrintOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("PrintPartnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ReelSize")
                        .HasColumnType("int");

                    b.Property<int>("StampCount")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartonId");

                    b.HasIndex("PrintOrderId");

                    b.HasIndex("PrintPartnerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Reel");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.ReelChangeRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ChangeToProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ChangeToSkuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int?>("ReelChangeProductId")
                        .HasColumnType("int");

                    b.Property<int>("ReelChangeType")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangeToProductId");

                    b.HasIndex("ChangeToSkuId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ReelChangeProductId");

                    b.ToTable("ReelChangeRequest");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.ReelChangeRequestHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<int>("ActionedBy")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReelChangeRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReelChangeRequestId");

                    b.ToTable("ReelChangeRequestHistory");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.ReelChangeRequestReel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReelChangeRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReelChangeRequestId");

                    b.HasIndex("ReelId");

                    b.ToTable("ReelChangeRequestReel");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.ReturnOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<int?>("DeliveryOtp")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryRemarks")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ExpectedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int?>("ShipperId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TrackingId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ShipperId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("ReturnOrder");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.ReturnOrderHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<int>("ActionedBy")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReturnOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReturnOrderId");

                    b.ToTable("ReturnOrderHistory");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.ReturnOrderReels", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CartonCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CartonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReelCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ReelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReturnOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CartonId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReelId");

                    b.HasIndex("ReturnOrderId");

                    b.ToTable("ReturnOrderReels");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.Carton", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Pallet", "Pallet")
                        .WithMany("Cartons")
                        .HasForeignKey("PalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.InternalStockRequest", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Warehouse", "ApprovingFacility")
                        .WithMany()
                        .HasForeignKey("ApprovingFacilityId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Warehouse", "RequestingFacility")
                        .WithMany()
                        .HasForeignKey("RequestingFacilityId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Organization", "Shipper")
                        .WithMany()
                        .HasForeignKey("ShipperId");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.InternalStockRequestHistory", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.InternalStockRequest", "InternalStockRequest")
                        .WithMany("InternalStockRequestHistories")
                        .HasForeignKey("InternalStockRequestId");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.InternalStockRequestReel", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.InternalStockRequest", "InternalStockRequest")
                        .WithMany("InternalStockRequestReels")
                        .HasForeignKey("InternalStockRequestId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Reel", "Reel")
                        .WithMany()
                        .HasForeignKey("ReelId");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.Order", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Organization", "Shipper")
                        .WithMany()
                        .HasForeignKey("ShipperId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.OrderHistory", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Order", "Order")
                        .WithMany("OrderHistories")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.OrderItem", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.OrgBrandProduct", "BrandProduct")
                        .WithMany()
                        .HasForeignKey("BrandProductId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.ReelSize", "ReelSize")
                        .WithMany()
                        .HasForeignKey("ReelSizeId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.StockKeepingUnit", "StockKeepingUnit")
                        .WithMany()
                        .HasForeignKey("StockKeepingUnitId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.OrderItemReel", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.OrgBrandProduct", "BrandProduct")
                        .WithMany()
                        .HasForeignKey("BrandProductId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Carton", "Carton")
                        .WithMany()
                        .HasForeignKey("CartonId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.InternalStockRequest", "InternalStockRequest")
                        .WithMany()
                        .HasForeignKey("InternalStockRequestId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.OrgBrandProduct", "NewBrandProduct")
                        .WithMany()
                        .HasForeignKey("NewBrandProductId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.StockKeepingUnit", "NewSku")
                        .WithMany()
                        .HasForeignKey("NewSkuId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.OrderItem", "OrderItem")
                        .WithMany()
                        .HasForeignKey("OrderItemId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.PrintOrder", "PrintOrder")
                        .WithMany()
                        .HasForeignKey("PrintOrderId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Reel", "Reel")
                        .WithMany()
                        .HasForeignKey("ReelId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.ReturnOrder", "ReturnOrder")
                        .WithMany()
                        .HasForeignKey("ReturnOrderId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.StockKeepingUnit", "Sku")
                        .WithMany()
                        .HasForeignKey("SkuId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.OrgWallet", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.ReturnOrder", "ReturnOrder")
                        .WithMany()
                        .HasForeignKey("ReturnOrderId");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.Pallet", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Container", "Container")
                        .WithMany()
                        .HasForeignKey("ContainerId");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.Payment", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Order", "Order")
                        .WithOne("Payment")
                        .HasForeignKey("Ntl.AuthSS.OrderManagement.Data.Entities.Payment", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.PaymentHistory", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Payment", "Payment")
                        .WithMany("PaymentHistories")
                        .HasForeignKey("PaymentId");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.PrintOrder", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Organization", "PrintPartner")
                        .WithMany()
                        .HasForeignKey("PrintPartnerId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.ReelSize", "ReelSize")
                        .WithMany()
                        .HasForeignKey("ReelSizeId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.PrintOrderHistory", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.PrintOrder", "PrintOrder")
                        .WithMany("PrintOrderHistories")
                        .HasForeignKey("PrintOrderId");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.PrintOrderRequest", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.PrintOrder", "PrintOrder")
                        .WithMany()
                        .HasForeignKey("PrintOrderId");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.Reel", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Carton", "Carton")
                        .WithMany("Reels")
                        .HasForeignKey("CartonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.PrintOrder", "PrintOrder")
                        .WithMany()
                        .HasForeignKey("PrintOrderId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Organization", "PrintPartner")
                        .WithMany()
                        .HasForeignKey("PrintPartnerId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.ReelChangeRequest", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.OrgBrandProduct", "ChangeToProduct")
                        .WithMany()
                        .HasForeignKey("ChangeToProductId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.StockKeepingUnit", "ChangeToSku")
                        .WithMany()
                        .HasForeignKey("ChangeToSkuId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Product", "ReelChangeProduct")
                        .WithMany()
                        .HasForeignKey("ReelChangeProductId");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.ReelChangeRequestHistory", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.ReelChangeRequest", "ReelChangeRequest")
                        .WithMany("ReelChangeRequestHistories")
                        .HasForeignKey("ReelChangeRequestId");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.ReelChangeRequestReel", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.ReelChangeRequest", "ReelChangeRequest")
                        .WithMany("ReelChangeRequestReels")
                        .HasForeignKey("ReelChangeRequestId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Reel", "Reel")
                        .WithMany()
                        .HasForeignKey("ReelId");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.ReturnOrder", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Organization", "Shipper")
                        .WithMany()
                        .HasForeignKey("ShipperId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.ReturnOrderHistory", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.ReturnOrder", "ReturnOrder")
                        .WithMany("ReturnOrderHistories")
                        .HasForeignKey("ReturnOrderId");
                });

            modelBuilder.Entity("Ntl.AuthSS.OrderManagement.Data.Entities.ReturnOrderReels", b =>
                {
                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Carton", "Carton")
                        .WithMany()
                        .HasForeignKey("CartonId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.Reel", "Reel")
                        .WithMany()
                        .HasForeignKey("ReelId");

                    b.HasOne("Ntl.AuthSS.OrderManagement.Data.Entities.ReturnOrder", "ReturnOrder")
                        .WithMany()
                        .HasForeignKey("ReturnOrderId");
                });
#pragma warning restore 612, 618
        }
    }
}
